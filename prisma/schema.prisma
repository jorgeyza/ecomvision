// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
    provider = "prisma-client-js"
}

datasource db {
    provider = "mongodb"
    url      = env("DATABASE_URL")
}

model User {
    id            String         @id @default(auto()) @map("_id") @db.ObjectId
    createdAt     DateTime       @default(now())
    updatedAt     DateTime       @updatedAt
    name          String
    email         String         @unique
    password      String
    city          String?
    state         String?
    country       String?
    occupation    String?
    phoneNumber   String?
    role          String
    transactions  Transaction[]
    affiliateStat AffiliateStat?
}

model OverallStats {
    id                   String           @id @default(auto()) @map("_id") @db.ObjectId
    totalCustomers       Int?
    yearlySalesTotal     Int?
    yearlyTotalSoldUnits Int?
    year                 Int?
    monthlyData          MonthlyData[]
    dailyData            DailyData[]
    salesByCategory      SalesByCategory?
}

model AffiliateStat {
    id             String        @id @default(auto()) @map("_id") @db.ObjectId
    createdAt      DateTime      @default(now())
    updatedAt      DateTime      @updatedAt
    userId         String        @unique @db.ObjectId
    user           User          @relation(fields: [userId], references: [id])
    affiliateSales Transaction[]
    transactionIds String[]      @db.ObjectId
}

model Transaction {
    id              String         @id @default(auto()) @map("_id") @db.ObjectId
    createdAt       DateTime       @default(now())
    updatedAt       DateTime       @updatedAt
    cost            Int?
    productsIds     String[]       @db.ObjectId
    products        Product[]
    User            User           @relation(fields: [userId], references: [id])
    userId          String         @db.ObjectId
    affiliateStat   AffiliateStat? @relation(fields: [affiliateStatId], references: [id])
    affiliateStatId String?        @db.ObjectId
}

model Product {
    id            String        @id @default(auto()) @map("_id") @db.ObjectId
    createdAt     DateTime      @default(now())
    updatedAt     DateTime      @updatedAt
    name          String?
    price         Int?
    description   String?
    category      String?
    rating        Int?
    supply        Int?
    productStat   ProductStat[]
    transaction   Transaction?  @relation(fields: [transactionId], references: [id])
    transactionId String?       @db.ObjectId
}

model ProductStat {
    id                   String        @id @default(auto()) @map("_id") @db.ObjectId
    createdAt            DateTime      @default(now())
    updatedAt            DateTime      @updatedAt
    product              Product       @relation(fields: [productId], references: [id])
    productId            String        @db.ObjectId
    yearlySalesTotal     Int?
    yearlyTotalSoldUnits Int?
    year                 Int?
    monthlyData          MonthlyData[]
    dailyData            DailyData[]
}

type MonthlyData {
    month      String?
    totalSales Int?
    totalUnits Int?
}

type DailyData {
    date       String?
    totalSales Int?
    totalUnits Int?
}

type SalesByCategory {
    shoes       Int?
    clothing    Int?
    accessories Int?
    misc        Int?
}

// enum RoleEnum {
//     user
//     admin
//     superadmin
// }
