// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
    provider = "prisma-client-js"
}

datasource db {
    provider = "mongodb"
    url      = env("DATABASE_URL")
}

model OverallStats {
    id                   String           @id @default(auto()) @map("_id") @db.ObjectId
    createdAt            DateTime         @default(now())
    updatedAt            DateTime         @updatedAt
    totalCustomers       Int
    yearlySalesTotal     Int
    yearlyTotalSoldUnits Int
    year                 Int
    monthlyData          MonthlyData[]
    dailyData            DailyData[]
    salesByCategory      SalesByCategory?
}

model Product {
    id          String        @id @default(auto()) @map("_id") @db.ObjectId
    createdAt   DateTime      @default(now())
    updatedAt   DateTime      @updatedAt
    name        String?
    price       Float?
    description String?
    category    String?
    rating      Float?
    supply      Int?
    productStat ProductStat[]
}

model ProductStat {
    id                   String        @id @default(auto()) @map("_id") @db.ObjectId
    createdAt            DateTime      @default(now())
    updatedAt            DateTime      @updatedAt
    product              Product       @relation(fields: [productId], references: [id])
    productId            String        @db.ObjectId
    yearlySalesTotal     Int?
    yearlyTotalSoldUnits Int?
    year                 Int?
    monthlyData          MonthlyData[]
    dailyData            DailyData[]
}

model User {
    id            String          @id @default(auto()) @map("_id") @db.ObjectId
    createdAt     DateTime        @default(now())
    updatedAt     DateTime        @updatedAt
    name          String
    email         String          @unique
    password      String
    city          String?
    state         String?
    country       String?
    occupation    String?
    phoneNumber   String?
    role          RoleEnum
    transactions  String[]        @db.ObjectId
    AffiliateStat AffiliateStat[]
}

model Transaction {
    id              String         @id @default(auto()) @map("_id") @db.ObjectId
    createdAt       DateTime       @default(now())
    updatedAt       DateTime       @updatedAt
    cost            Float?
    userId          String         @db.ObjectId
    productsIds     String[]       @db.ObjectId
    AffiliateStat   AffiliateStat? @relation(fields: [affiliateStatId], references: [id])
    affiliateStatId String?        @db.ObjectId
}

model AffiliateStat {
    id             String        @id @default(auto()) @map("_id") @db.ObjectId
    createdAt      DateTime      @default(now())
    updatedAt      DateTime      @updatedAt
    user           User          @relation(fields: [userId], references: [id])
    userId         String        @db.ObjectId
    affiliateSales Transaction[]
}

type MonthlyData {
    month      String?
    totalSales Int?
    totalUnits Int?
}

type DailyData {
    date       String?
    totalSales Int?
    totalUnits Int?
}

type SalesByCategory {
    shoes       Int?
    clothing    Int?
    accessories Int?
    misc        Int?
}

enum RoleEnum {
    user
    admin
    superadmin
}
